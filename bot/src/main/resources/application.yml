app:
  telegram-token: ${TELEGRAM_TOKEN}
  kafka:
    updates-topic:
      name: updates
      partitions: 1
      replicas: 1
    dlq-topic:
      name: dlq
      partitions: 1
      replicas: 1
  client:
    scrapper:
      url: http://localhost:8080
      codes: [404]
      backoff-type: exponential
      duration: 2s

spring:
  application:
    name: bot
  jackson:
    time-zone: UTC
  cache:
    cache-names:
      - bot-buckets
    caffeine:
      spec: maximumSize=100000,expireAfterAccess=3600s

bucket4j:
  enabled: true
  filters:
  - cache-name: bot-buckets
    url: /updates
    rate-limits:
    - cache-key: getRemoteAddr()
      bandwidths:
      - capacity: 20
        time: 1
        unit: minutes

management:
  server:
    port: 8083
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
      base-path: /
      path-mapping:
        info: info
        health: health
        prometheus: metrics
  endpoint:
    info:
      enabled: true
    health:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}

server:
  port: 8090

logging:
  config: classpath:log4j2-plain.xml

springdoc:
  swagger-ui:
    path: /swagger-ui
